**Create an Apex class that uses the @future annotation to update Account records.**

Create an Apex class with a method using the @future annotation that accepts a List of Account IDs and updates a custom field on the Account object with the number of contacts associated to the Account. Write unit tests that achieve 100% code coverage for the class.
Create a field on the Account object called 'Number_of_Contacts__c' of type Number. This field will hold the total number of Contacts for the Account.
Create an Apex class called 'AccountProcessor' that contains a 'countContacts' method that accepts a List of Account IDs. This method must use the @future annotation.
For each Account ID passed to the method, count the number of Contact records associated to it and update the 'Number_of_Contacts__c' field with this value.
Create an Apex test class called 'AccountProcessorTest'.
The unit tests must cover all lines of code included in the AccountProcessor class, resulting in 100% code coverage.
Run your test class at least once (via 'Run All' tests the Developer Console) before attempting to verify this challenge.

public class AccountProcessor {
    @Future
    public static void countContacts(List<id> idList){
        List<Account> listAct = [SELECT Id,Number_of_Contacts__c,(SELECT Id FROM contacts) from Account where Id IN:idList];
        for(Account acct:listAct)
        {
            List<Contact> listCon = acct.Contacts;
            acct.Number_of_Contacts__c = listCon.size();
   
        }
        update listAct;
    }

}



@isTest
public class AccountProcessorTest {
    public static testMethod void TestAccountProcessorTest(){
        Account act = new Account();
        act.Name = 'Test account';
        Insert act;
        
        Contact con = new Contact();
        con.FirstName = 'FTest';
        con.LastName = 'LTest';
        con.AccountId=act.Id;
        Insert con;
        
        List<Id> listId = new List<Id>();
        listId.add(act.Id);
        
        Test.startTest();
        AccountProcessor.countContacts(listId);
        Test.stopTest();
        
        Account acct = [SELECT Number_of_Contacts__c From Account WHERE Id = :act.Id LIMIT 1];
        System.assertEquals(Integer.valueOf(Acct.Number_of_Contacts__c), 1);
        
    }  
}
